name: "Build Astro JS page"

on:
  push:
    branches: [ "master", "astro-relaunch" ]
  pull_request:
    branches: [ "master", "astro-relaunch" ]
  schedule:
    - cron: '30 2 * * *'
  workflow_dispatch:

concurrency:
  group: "site"
  cancel-in-progress: false

env:
  BUILD_PATH: "." 

jobs:
  build:
      name: Build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Detect package manager
          id: detect-package-manager
          run: |
            if [ -f "${{ github.workspace }}/yarn.lock" ]; then
              echo "manager=yarn" >> $GITHUB_OUTPUT
              echo "command=install" >> $GITHUB_OUTPUT
              echo "runner=yarn" >> $GITHUB_OUTPUT
              echo "lockfile=yarn.lock" >> $GITHUB_OUTPUT
              exit 0
            elif [ -f "${{ github.workspace }}/package.json" ]; then
              echo "manager=npm" >> $GITHUB_OUTPUT
              echo "command=ci" >> $GITHUB_OUTPUT
              echo "runner=npx --no-install" >> $GITHUB_OUTPUT
              echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
              exit 0
            else
              echo "Unable to determine package manager"
              exit 1
            fi
        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: "20"
            cache: ${{ steps.detect-package-manager.outputs.manager }}
            cache-dependency-path: ${{ env.BUILD_PATH }}/${{ steps.detect-package-manager.outputs.lockfile }}
        - name: Install dependencies
          run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
          working-directory: ${{ env.BUILD_PATH }}
          env:
            FONTAWESOME_PACKAGE_TOKEN: ${{ secrets.FONTAWESOME_PACKAGE_TOKEN }}
        - name: Build with Astro
          run: |
            ${{ steps.detect-package-manager.outputs.runner }} astro build \
              --site "https://2martens.de" \
              --base "/"
          working-directory: ${{ env.BUILD_PATH }}
          env:
            CMS_BASE_URL: ${{ secrets.CMS_BASE_URL }}
        - name: Push site to Uberspace
          uses: easingthemes/ssh-deploy@main
          with:
              SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              ARGS: "-rvz -i --delete"
              SOURCE: "dist/"
              REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
              REMOTE_USER: ${{ secrets.REMOTE_USER }}
              TARGET: /var/www/virtual/${{ secrets.REMOTE_USER }}/2martens.de-new/
              EXCLUDE: "/dist/, /node_modules/"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy site on Uberspace
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: ~/bin/updateRelaunch.sh
